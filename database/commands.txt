# Construir una imagen Docker para MySQL utilizando el Dockerfile en el directorio actual.
# El nombre de la imagen será 'my-mysql-image'.
docker build -t my-mysql-image .

# Ejecutar un contenedor basado en la imagen 'my-mysql-image'.
# Asignar el nombre 'my-mysql-container' al contenedor.
# Ejecutar el contenedor en segundo plano (-d) y mapear el puerto 3306 del contenedor al puerto 3306 del host.
docker run --name my-mysql-container -d -p 3306:3306 my-mysql-image

# Acceder al contenedor 'my-mysql-container' de manera interactiva (-it).
# Ejecutar el cliente de MySQL dentro del contenedor.
# Iniciar sesión como el usuario 'root' y solicitar la contraseña (-p).
docker exec -it my-mysql-container mysql -u root -p

# Se te pedirá que ingreses la contraseña. Usa la siguiente contraseña:
# Contraseña: root_password


-- Seleccionar la base de datos 'TiendaJPBB' para usarla.
USE TiendaJPBB;

-- Mostrar todas las tablas dentro de la base de datos 'TiendaJPBB'.
SHOW TABLES;

-- Seleccionar y mostrar todos los registros de la tabla 'customer'.
SELECT * FROM customer;



Montar el venv:

python -m env env

source env/bin/activate


instalar dependencias del proyecto:
pip install mysql-connector-python
pip install fastapi 
pip install fastapi uvicorn

Montar api 
uvicorn main:app --reload
